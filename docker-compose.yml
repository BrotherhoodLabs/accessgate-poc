version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: accessgate-postgres
    environment:
      POSTGRES_DB: accessgate_poc
      POSTGRES_USER: accessgate
      POSTGRES_PASSWORD: accessgate123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U accessgate -d accessgate_poc"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - accessgate-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: accessgate-backend
    environment:
      NODE_ENV: production
      PORT: 8000
      DATABASE_URL: postgresql://accessgate:accessgate123@postgres:5432/accessgate_poc
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
      CORS_ORIGINS: http://localhost:3000,http://localhost:80
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - accessgate-network
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm start
      "

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: accessgate-frontend
    environment:
      VITE_API_URL: http://localhost:8000/api
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - accessgate-network

volumes:
  postgres_data:

networks:
  accessgate-network:
    driver: bridge
