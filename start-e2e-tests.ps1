# Script principal pour d√©marrer les tests E2E AccessGate PoC
# Utilise les scripts organis√©s dans les sous-dossiers

Write-Host "üöÄ AccessGate PoC - Tests E2E Complets" -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Green

# V√©rifier les pr√©requis
Write-Host "üîç V√©rification des pr√©requis..." -ForegroundColor Yellow

# V√©rifier Python
try {
    $pythonVersion = python --version 2>&1
    Write-Host "‚úÖ Python: $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python non trouv√©. Veuillez installer Python 3.8+" -ForegroundColor Red
    exit 1
}

# V√©rifier kubectl
try {
    $kubectlVersion = kubectl version --client --short 2>&1
    Write-Host "‚úÖ kubectl: $kubectlVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå kubectl non trouv√©. Veuillez installer kubectl" -ForegroundColor Red
    exit 1
}

# V√©rifier le cluster Kubernetes
try {
    kubectl cluster-info | Out-Null
    Write-Host "‚úÖ Cluster Kubernetes accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Cluster Kubernetes non accessible" -ForegroundColor Red
    Write-Host "   Assurez-vous que votre cluster est d√©marr√© et accessible" -ForegroundColor Yellow
    exit 1
}

# Installer les d√©pendances si n√©cessaire
Write-Host "üì¶ V√©rification des d√©pendances Python..." -ForegroundColor Yellow
try {
    python -c "import requests" 2>$null
    Write-Host "‚úÖ requests disponible" -ForegroundColor Green
} catch {
    Write-Host "üì• Installation de requests..." -ForegroundColor Yellow
    pip install requests
}

Write-Host ""
Write-Host "üöÄ Lancement des tests E2E..." -ForegroundColor Green
Write-Host "   - D√©ploiement automatique des composants Kubernetes" -ForegroundColor Cyan
Write-Host "   - Configuration du port forwarding" -ForegroundColor Cyan
Write-Host "   - Ex√©cution des tests complets" -ForegroundColor Cyan
Write-Host "   - G√©n√©ration des logs structur√©s pour Grafana" -ForegroundColor Cyan
Write-Host ""

try {
    python scripts/e2e/run-all-k8s-e2e.py
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "üéâ TESTS E2E R√âUSSIS!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìä Logs et m√©triques disponibles:" -ForegroundColor Cyan
        Write-Host "   - complete-e2e-results.jsonl (logs d√©taill√©s)" -ForegroundColor White
        Write-Host "   - Console (affichage en temps r√©el)" -ForegroundColor White
        Write-Host ""
        Write-Host "üåê Application accessible sur:" -ForegroundColor Cyan
        Write-Host "   - Frontend: http://localhost:3001" -ForegroundColor White
        Write-Host "   - Backend: http://localhost:8001" -ForegroundColor White
        Write-Host "   - Health Check: http://localhost:8001/health" -ForegroundColor White
        Write-Host ""
        Write-Host "üìà Pour visualiser les m√©triques dans Grafana:" -ForegroundColor Cyan
        Write-Host "   1. Importer le dashboard: scripts/monitoring/grafana-dashboard.json" -ForegroundColor White
        Write-Host "   2. Configurer la source de donn√©es pour lire complete-e2e-results.jsonl" -ForegroundColor White
        Write-Host ""
        Write-Host "üß™ Tests ex√©cut√©s avec succ√®s:" -ForegroundColor Cyan
        Write-Host "   ‚úÖ Health Check Backend" -ForegroundColor Green
        Write-Host "   ‚úÖ Inscription Utilisateur" -ForegroundColor Green
        Write-Host "   ‚úÖ Connexion Utilisateur" -ForegroundColor Green
        Write-Host "   ‚úÖ Acc√®s Frontend" -ForegroundColor Green
        Write-Host "   ‚úÖ API Compl√®te" -ForegroundColor Green
        Write-Host ""
        Write-Host "üîß Pour arr√™ter l'application:" -ForegroundColor Yellow
        Write-Host "   kubectl delete namespace accessgate-poc" -ForegroundColor White
    } else {
        Write-Host ""
        Write-Host "‚ùå CERTAINS TESTS ONT √âCHOU√â" -ForegroundColor Red
        Write-Host "üìä Consultez complete-e2e-results.jsonl pour les d√©tails" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "üîß Pour diagnostiquer:" -ForegroundColor Yellow
        Write-Host "   kubectl get pods -n accessgate-poc" -ForegroundColor White
        Write-Host "   kubectl logs -l app=accessgate-backend -n accessgate-poc" -ForegroundColor White
        Write-Host "   kubectl logs -l app=accessgate-frontend -n accessgate-poc" -ForegroundColor White
    }
} catch {
    Write-Host ""
    Write-Host "üí• ERREUR LORS DE L'EX√âCUTION" -ForegroundColor Red
    Write-Host "D√©tails: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host ""
    Write-Host "üîß V√©rifications √† effectuer:" -ForegroundColor Yellow
    Write-Host "   - Cluster Kubernetes accessible" -ForegroundColor White
    Write-Host "   - Fichiers k8s/ pr√©sents" -ForegroundColor White
    Write-Host "   - Python et d√©pendances install√©s" -ForegroundColor White
    exit 1
}

Write-Host ""
Write-Host "‚ú® Script termin√©!" -ForegroundColor Green
Write-Host "   Merci d'avoir utilis√© AccessGate PoC!" -ForegroundColor Cyan
